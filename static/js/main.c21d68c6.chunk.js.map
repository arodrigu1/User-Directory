{"version":3,"sources":["utils/api.js","components/Search.js","components/UserTable.js","App.js","reportWebVitals.js","index.js"],"names":["Axios","get","SearchForm","employeeSearch","htmlFor","onChange","name","type","placeholder","id","Employees","useState","employees","filteredEmployees","employeeState","setEmployeeState","useEffect","API","then","res","data","results","Search","e","searchValue","target","value","toLowerCase","searchResults","filter","employee","first","last","includes","className","map","user","src","picture","medium","alt","cell","email","Date","dob","date","toLocaleDateString","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAGe,EACH,WACR,OAAOA,IAAMC,IAAI,iDCaNC,MAff,YAAyC,IAAnBC,EAAkB,EAAlBA,eACpB,OACE,gCACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUF,EACVG,KAAK,SACLC,KAAK,SACLC,YAAY,sBACZC,GAAG,eCNI,SAASC,IAAa,IAAD,EACQC,mBAAS,CACjDC,UAAW,GACXC,kBAAmB,KAHa,mBAC3BC,EAD2B,KACZC,EADY,KAMlCC,qBAAU,WACRC,IAAeC,MAAK,SAACC,GACnBJ,EAAiB,2BACZD,GADW,IAEdF,UAAWO,EAAIC,KAAKC,QACpBR,kBAAmBM,EAAIC,KAAKC,gBAG/B,IAcH,OACE,sBAAKZ,GAAG,YAAR,UACE,cAACa,EAAD,CAAYnB,eAdO,SAACoB,GACtB,IAAIC,EAAcD,EAAEE,OAAOC,MAC3BF,EAAcA,EAAYG,cAC1B,IAAIC,EAAa,YAAOd,EAAcF,WACtCgB,EAAgBA,EAAcC,QAAO,SAACC,GAEpC,MADe,UAAGA,EAASxB,KAAKyB,OAAjB,OAAyBD,EAASxB,KAAK0B,MAAOL,cAC7CM,SAAST,MAE3BT,EAAiB,2BAAKD,GAAN,IAAqBD,kBAAmBe,QAOtD,wBAAOM,UAAU,qBAAjB,UACE,gCACE,+BACE,uCACA,sCACA,6CACA,uCACA,+CAGJ,gCACGpB,EAAcD,kBAAkBsB,KAAI,SAACC,GAAD,OACnC,+BACE,qBAAKC,IAAKD,EAAKE,QAAQC,OAAQC,IAAI,KACnC,uCACMJ,EAAK9B,KAAKyB,MADhB,6BAEIK,EAAK9B,KAAK0B,QAEd,6BAAKI,EAAKK,OACV,6BAAKL,EAAKM,QACV,6BAAK,IAAIC,KAAKP,EAAKQ,IAAIC,MAAMC,qCCpD5B,SAASC,IACtB,OACE,8BACE,cAAC,EAAD,MCRN,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c21d68c6.chunk.js","sourcesContent":["import Axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return Axios.get(\"https://randomuser.me/api/?results=10&nat=us\");\r\n  },\r\n};","  \r\nimport React from \"react\";\r\n\r\nfunction SearchForm({ employeeSearch }) {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">Search:</label>\r\n      <input\r\n        onChange={employeeSearch}\r\n        name=\"search\"\r\n        type=\"search\"\r\n        placeholder=\"Search for Employee\"\r\n        id=\"search\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { useState, useEffect } from \"react\";\r\nimport API from \"../utils/api\";\r\nimport SearchForm from \"../components/Search\";\r\n\r\n\r\n\r\nexport default function Employees() {\r\n  const [employeeState, setEmployeeState] = useState({\r\n    employees: [],\r\n    filteredEmployees: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then((res) => {\r\n      setEmployeeState({\r\n        ...employeeState,\r\n        employees: res.data.results,\r\n        filteredEmployees: res.data.results,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const employeeSearch = (e) => {\r\n    let searchValue = e.target.value;\r\n    searchValue = searchValue.toLowerCase();\r\n    let searchResults = [...employeeState.employees];\r\n    searchResults = searchResults.filter((employee) => {\r\n      let fullName = `${employee.name.first}${employee.name.last}`.toLowerCase();\r\n      return fullName.includes(searchValue);\r\n    });\r\n    setEmployeeState({ ...employeeState, filteredEmployees: searchResults });\r\n  };\r\n\r\n\r\n  return (\r\n    <div id=\"container\">\r\n      <SearchForm employeeSearch={employeeSearch} />\r\n      <table className=\"highlight centered\">\r\n        <thead>\r\n          <tr>\r\n            <th>Image</th>\r\n            <th>Name</th>\r\n            <th>Cell Number</th>\r\n            <th>Email</th>\r\n            <th>Birthday</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {employeeState.filteredEmployees.map((user) => (\r\n            <tr>\r\n              <img src={user.picture.medium} alt=\"\" />\r\n              <td>\r\n                {`${user.name.first}\r\n                ${user.name.last}`}\r\n              </td>\r\n              <td>{user.cell}</td>\r\n              <td>{user.email}</td>\r\n              <td>{new Date(user.dob.date).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\nimport Users from \"../src/components/UserTable\";\n\n\n\nexport default function App() {\n  return (\n    <div>\n      <Users />\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}